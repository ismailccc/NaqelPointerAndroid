Index: app/src/main/java/com/naqelexpress/naqelpointer/Activity/MyRoute/MyRouteActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.naqelexpress.naqelpointer.Activity.MyRoute;\n\nimport android.app.ProgressDialog;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.database.Cursor;\nimport android.graphics.Color;\nimport android.location.Location;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.support.v7.app.AlertDialog;\nimport android.support.v7.app.AppCompatActivity;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.AdapterView;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.baoyz.swipemenulistview.SwipeMenu;\nimport com.baoyz.swipemenulistview.SwipeMenuCreator;\nimport com.baoyz.swipemenulistview.SwipeMenuItem;\nimport com.baoyz.swipemenulistview.SwipeMenuListView;\nimport com.naqelexpress.naqelpointer.Activity.Booking.BookingPlanActivity;\nimport com.naqelexpress.naqelpointer.Activity.Waybill.WaybillPlanActivity;\nimport com.naqelexpress.naqelpointer.Activity.routeMap.MapMovingOnCurLatLng;\nimport com.naqelexpress.naqelpointer.Activity.routeMap.RouteMap;\nimport com.naqelexpress.naqelpointer.Classes.JsonSerializerDeserializer;\nimport com.naqelexpress.naqelpointer.DB.DBConnections;\nimport com.naqelexpress.naqelpointer.DB.DBObjects.MyRouteShipments;\nimport com.naqelexpress.naqelpointer.GlobalVar;\nimport com.naqelexpress.naqelpointer.JSON.Request.BringMyRouteShipmentsRequest;\nimport com.naqelexpress.naqelpointer.R;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.ArrayList;\n\npublic class MyRouteActivity\n        extends AppCompatActivity {\n    private SwipeMenuListView mapListview;\n    private RouteListAdapter adapter;\n    Button btnStartTrip, btnCloseTrip;\n    TextView txtStartTrip, txtCloseTrip;\n    public static ArrayList<Location> places = new ArrayList<>();\n    protected boolean flag_thread = false;\n    static int progressflag = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setContentView(R.layout.myroute);\n\n        progressflag = 0;\n\n        mapListview = (SwipeMenuListView) findViewById(R.id.myRouteListView);\n\n        adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n        mapListview.setAdapter(adapter);\n\n\n        btnStartTrip = (Button) findViewById(R.id.btnStartTrip);\n        btnCloseTrip = (Button) findViewById(R.id.btnCloseTrip);\n\n        txtStartTrip = (TextView) findViewById(R.id.txtStartTrip);\n        txtCloseTrip = (TextView) findViewById(R.id.txtCloseTrip);\n\n        //if (savedInstanceState == null)\n//        checkCourierDailyRouteID(false, 1);\n\n        if (GlobalVar.GV().CourierDailyRouteID == 0) {\n            btnStartTrip.setVisibility(View.VISIBLE);\n            txtStartTrip.setVisibility(View.VISIBLE);\n            btnCloseTrip.setVisibility(View.GONE);\n            txtCloseTrip.setVisibility(View.GONE);\n        } else {\n            btnStartTrip.setVisibility(View.GONE);\n            txtStartTrip.setVisibility(View.GONE);\n            if (GlobalVar.GV().myRouteShipmentList.size() > 0) {\n                btnCloseTrip.setVisibility(View.GONE);\n                txtCloseTrip.setVisibility(View.GONE);\n            } else {\n                btnCloseTrip.setVisibility(View.VISIBLE);\n                txtCloseTrip.setVisibility(View.VISIBLE);\n            }\n        }\n\n        GlobalVar.GV().myRouteShipmentList.clear();\n        btnStartTrip.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                checkCourierDailyRouteID(true, 0);\n                flag_thread = true;\n\n            }\n        });\n\n        btnCloseTrip.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                DBConnections dbConnections = new DBConnections(getApplicationContext(), null);\n                GlobalVar.GV().CourierDailyRouteID = dbConnections.getMaxID(\"CourierDailyRoute Where EmployID = \" + GlobalVar.GV().EmployID + \" and EndTime is NULL \", getApplicationContext());\n                if (GlobalVar.GV().CourierDailyRouteID > 0) {\n                    dbConnections.CloseCurrentCourierDailyRoute(getWindow().getDecorView().getRootView(), getApplicationContext());\n                    dbConnections.close();\n                    finish();\n                }\n            }\n        });\n\n        mapListview.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                if (GlobalVar.GV().CourierDailyRouteID > 0) {\n                    if (GlobalVar.GV().myRouteShipmentList.get(position).TypeID == 1) {\n                        Intent intent = new Intent(getApplicationContext(), WaybillPlanActivity.class);\n                        Bundle bundle = new Bundle();\n                        bundle.putString(\"ID\", String.valueOf(GlobalVar.GV().myRouteShipmentList.get(position).ID));\n                        bundle.putString(\"WaybillNo\", GlobalVar.GV().myRouteShipmentList.get(position).ItemNo);\n                        bundle.putInt(\"position\", position);\n                        intent.putExtras(bundle);\n                        startActivity(intent);\n                    } else {\n                        Intent intent = new Intent(getApplicationContext(), BookingPlanActivity.class);\n                        startActivity(intent);\n                    }\n                } else\n                    GlobalVar.GV().ShowSnackbar(getWindow().getDecorView().getRootView(), \"You have to start a new trip before\", GlobalVar.AlertType.Warning);\n            }\n        });\n\n        SwipeMenuCreator creator = new SwipeMenuCreator() {\n            @Override\n            public void create(SwipeMenu menu) {\n                int menuItemWidth = 120;\n                // create \"open\" item\n                SwipeMenuItem openItem = new SwipeMenuItem(\n                        getApplicationContext());\n                // set item background\n                openItem.setBackground(R.color.NaqelBlue);\n                //(new ColorDrawable(Color.rgb(0xC9, 0xC9,0xCE)));\n                // set item width\n                openItem.setWidth(menuItemWidth);\n                // set item title\n                openItem.setTitle(\"Open\");\n                // set item title fontsize\n                openItem.setTitleSize(18);\n                // set item title font color\n                openItem.setTitleColor(Color.WHITE);\n                // add to menu\n                menu.addMenuItem(openItem);\n\n                // create \"Deliver Later\" item\n                SwipeMenuItem deleteItem = new SwipeMenuItem(\n                        getApplicationContext());\n                // set item background\n                deleteItem.setBackground(R.color.NaqelRed);\n                //(new ColorDrawable(Color.rgb(0xF9,0x3F, 0x25)));\n                // set item width\n                deleteItem.setWidth(menuItemWidth);\n                // set a icon\n                //deleteItem.setIcon(R.drawable.settings);\n                deleteItem.setTitle(\"Delete\");\n                // set item title font color\n                deleteItem.setTitleColor(Color.WHITE);\n                // set item title fontsize\n                deleteItem.setTitleSize(18);\n                // add to menu\n                menu.addMenuItem(deleteItem);\n            }\n        };\n\n        // set creator\n        mapListview.setMenuCreator(creator);\n        mapListview.setOnMenuItemClickListener(new SwipeMenuListView.OnMenuItemClickListener() {\n            @Override\n            public boolean onMenuItemClick(int position, SwipeMenu menu, int index) {\n                switch (index) {\n                    case 0:\n                        if (GlobalVar.GV().myRouteShipmentList.get(position).TypeID == 1) {\n                            Intent intent = new Intent(getApplicationContext(), WaybillPlanActivity.class);\n                            Bundle bundle = new Bundle();\n                            bundle.putString(\"ID\", String.valueOf(GlobalVar.GV().myRouteShipmentList.get(position).ID));\n                            bundle.putString(\"WaybillNo\", GlobalVar.GV().myRouteShipmentList.get(position).ItemNo);\n                            intent.putExtras(bundle);\n                            startActivity(intent);\n                        } else {\n                            Intent intent = new Intent(getApplicationContext(), BookingPlanActivity.class);\n                            Bundle bundle = new Bundle();\n                            bundle.putString(\"ID\", String.valueOf(GlobalVar.GV().myRouteShipmentList.get(position).ID));\n                            bundle.putString(\"WaybillNo\", GlobalVar.GV().myRouteShipmentList.get(position).ItemNo);\n                            intent.putExtras(bundle);\n                            startActivity(intent);\n                        }\n                        break;\n                    case 1:\n                        MyRouteShipments item = GlobalVar.GV().myRouteShipmentList.get(position);\n                        GlobalVar.GV().myRouteShipmentList.remove(item);\n                        adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                        mapListview.setAdapter(adapter);\n                        break;\n                }\n                // false : close the menu; true : not close the menu\n                return false;\n            }\n        });\n        GlobalVar.GV().CourierDailyRouteID = 0;\n        checkCourierDailyRouteID(false, 1);\n    }\n\n    private void ValidateDatas() {\n        final Handler handler = new Handler();\n        handler.postDelayed(new Runnable() {\n            public void run() {\n                // new DownloadJSON().execute();\n                try {\n                    if (!flag_thread) {\n                        flag_thread = true;\n\n                        progressflag = 0;\n                        BringMyRouteShipmentsRequest bringMyRouteShipmentsRequest = new BringMyRouteShipmentsRequest();\n                        BringMyRouteShipments(bringMyRouteShipmentsRequest, 1);\n\n\n                    }\n                    handler.postDelayed(this, 20000);\n                } catch (Exception e) {\n                    flag_thread = false;\n                    handler.postDelayed(this, 20000);\n                    Log.e(\"Dashboard thread\", e.toString());\n                }\n\n            }\n        }, 20000);\n    }\n\n    private void checkCourierDailyRouteID(boolean CreateNewRoute, int buttonclick) {\n        DBConnections dbConnections = new DBConnections(getApplicationContext(), null);\n        if (GlobalVar.GV().CourierDailyRouteID == 0) {\n            GlobalVar.GV().CourierDailyRouteID = dbConnections.getMaxID(\"CourierDailyRoute Where EmployID = \" + GlobalVar.GV().EmployID + \" and EndTime is NULL \", getApplicationContext());\n            GlobalVar.GV().LoadMyRouteShipments(\"OrderNo\", true, getApplicationContext(),\n                    getWindow().getDecorView().getRootView());\n\n            if (GlobalVar.GV().myRouteShipmentList.size() > 0) {\n                btnStartTrip.setVisibility(View.GONE);\n                txtStartTrip.setVisibility(View.GONE);\n\n                btnCloseTrip.setVisibility(View.GONE);\n                txtCloseTrip.setVisibility(View.GONE);\n\n                adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                mapListview.setAdapter(adapter);\n\n\n                //ValidateDatas();\n\n            }\n            dbConnections.close();\n\n        } else if (GlobalVar.GV().myRouteShipmentList.size() == 0) {\n            btnStartTrip.setVisibility(View.GONE);\n            txtStartTrip.setVisibility(View.GONE);\n\n            btnCloseTrip.setVisibility(View.VISIBLE);\n            txtCloseTrip.setVisibility(View.VISIBLE);\n        } else {\n            btnStartTrip.setVisibility(View.GONE);\n            txtStartTrip.setVisibility(View.GONE);\n\n            btnCloseTrip.setVisibility(View.GONE);\n            txtCloseTrip.setVisibility(View.GONE);\n        }\n\n        if (GlobalVar.GV().CourierDailyRouteID == 0 && CreateNewRoute) {\n            BringMyRouteShipmentsRequest bringMyRouteShipmentsRequest = new BringMyRouteShipmentsRequest();\n            progressflag = 1;\n            BringMyRouteShipments(bringMyRouteShipmentsRequest, buttonclick);\n        }\n\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.myroutemenu, menu);\n        return super.onCreateOptionsMenu(menu);\n    }\n\n    class Optimization {\n        public String CurrentLocation;\n        public String EmployID;\n        public String FleetNo;\n        public String Waybills;\n    }\n\n    double Latitude = 0, Longitude = 0;\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle item selection\n        switch (item.getItemId()) {\n            case R.id.OptimizeShipments:\n//                if (ActivityCompat.checkSelfPermission(MyRouteActivity.this, Manifest.permission.ACCESS_FINE_LOCATION)\n//                        == PackageManager.PERMISSION_GRANTED &&\n//                        ActivityCompat.checkSelfPermission(MyRouteActivity.this, Manifest.permission.ACCESS_COARSE_LOCATION)\n//                                == PackageManager.PERMISSION_GRANTED) {\n//                    Location location = GlobalVar.getLastKnownLocation(getApplicationContext());\n//\n//                    Latitude = location.getLatitude();\n//                    Longitude = location.getLongitude();\n//\n//                }\n//                Optimization optimization = new Optimization();\n//                optimization.CurrentLocation = String.valueOf(Latitude) + \",\" + String.valueOf(Longitude);\n//                optimization.EmployID = String.valueOf(GlobalVar.GV().EmployID);\n//                optimization.FleetNo = \"test\";\n//                String MyShipments = \"\";\n//                for (int i = 0; i < GlobalVar.GV().myRouteShipmentList.size(); i++) {\n//                    MyShipments += GlobalVar.GV().myRouteShipmentList.get(i).ItemNo;\n//                    if (i < GlobalVar.GV().myRouteShipmentList.size() - 1)\n//                        MyShipments += \",\";\n//                }\n//                optimization.Waybills = MyShipments;\n//                String jsonData = JsonSerializerDeserializer.serialize(optimization, true);\n//                ProjectAsyncTask task = new ProjectAsyncTask(\"Optimize\", \"Post\", jsonData, \"http://35.188.10.142/NaqelRouteApi/api/\");\n//                task.setUpdateListener(new OnUpdateListener() {\n//                    public void onPostExecuteUpdate(String obj) {\n//                        new MyRouteShipments(obj, MyRouteShipments.UpdateType.Optimization, getApplicationContext(),\n//                                getWindow().getDecorView().getRootView());\n//                        adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n//                        mapListview.setAdapter(adapter);\n//                        //GlobalVar.GV().ShowSnackbar(GlobalVar.GV().rootView, \"Finish Optimizing Shipments\", GlobalVar.AlertType.Info);\n//                    }\n//\n//                    public void onPreExecuteUpdate() {\n//                        GlobalVar.GV().ShowSnackbar(getWindow().getDecorView().getRootView(), \"Start Optimizing Shipments\", GlobalVar.AlertType.Info);\n//                    }\n//                });\n//                task.execute();\n                return true;\n            case R.id.deleteall:\n                deleteConfirmRoute();\n                return true;\n            case R.id.mnuShowDeliverySheetOrder:\n                //OrderNo\n                GlobalVar.GV().LoadMyRouteShipments(\"ItemNo\", true, getApplicationContext()\n                        , getWindow().getDecorView().getRootView());\n\n                adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                mapListview.setAdapter(adapter);\n                return true;\n//            case R.id.DeleteAll:\n////                //TODO remove delete all from the menu itself.\n////                GlobalVar.GV().myRouteShipmentList = new ArrayList<>();\n////                adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList);\n////                mapListview.setAdapter(adapter);\n////                btnCloseTrip.setVisibility(View.VISIBLE);\n////                txtCloseTrip.setVisibility(View.VISIBLE);\n//                GlobalVar.GV().ShowSnackbar(GlobalVar.GV().rootView,\"You don't have a privillages.\", GlobalVar.AlertType.Warning);\n//                return true;\n//            case R.id.CheckNewBooking:\n//                //com.naqelexpress.naqelpointer.JSON.DataSync dataSync = new DataSync();\n//                //dataSync.CheckOnlineBooking();\n//                GlobalVar.GV().ShowSnackbar(GlobalVar.GV().rootView,\"You don't have a privillages.\", GlobalVar.AlertType.Warning);\n//                return true;\n            case R.id.mnuSyncData:\n                //   GlobalVar.GV().SyncData(getApplicationContext(), getWindow().getDecorView().getRootView());\n                return true;\n            case R.id.groupmap:\n                try {\n                    Intent intent = new Intent(MyRouteActivity.this, RouteMap.class);\n                    startActivity(intent);\n                } catch (Exception e) {\n                    System.out.println(e.getMessage());\n                }\n                return true;\n            case R.id.movingmap:\n                try {\n                    Intent intent = new Intent(MyRouteActivity.this, MapMovingOnCurLatLng.class);\n                    startActivity(intent);\n                } catch (Exception e) {\n                    System.out.println(e.getMessage());\n                }\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n\n    //------------------------Bring My Route Shipments -------------------------------\n    public void BringMyRouteShipments(BringMyRouteShipmentsRequest bringMyRouteShipmentsRequest, int buttonclick) {\n\n        String jsonData = JsonSerializerDeserializer.serialize(bringMyRouteShipmentsRequest, true);\n        new BringMyRouteShipmentsList().execute(jsonData, String.valueOf(buttonclick));\n    }\n\n    private class BringMyRouteShipmentsList extends AsyncTask<String, Void, String> {\n        private ProgressDialog progressDialog;\n        String result = \"\";\n        StringBuffer buffer;\n        int buttonclick;\n\n        @Override\n        protected void onPreExecute() {\n            if (progressflag == 1)\n                progressDialog = ProgressDialog.show(MyRouteActivity.this, \"Please wait.\", \"Downloading Shipments Details.\", true);\n        }\n\n        @Override\n        protected String doInBackground(String... params) { //17748\n            String jsonData = params[0];\n            buttonclick = Integer.parseInt(params[1]);\n\n            HttpURLConnection httpURLConnection = null;\n            OutputStream dos = null;\n            InputStream ist = null;\n\n            try {\n                URL url = new URL(GlobalVar.GV().NaqelPointerAPILink + \"BringMyRouteShipments\");\n                httpURLConnection = (HttpURLConnection) url.openConnection();\n\n                httpURLConnection.setRequestMethod(\"POST\");\n                httpURLConnection.setRequestProperty(\"Content-Type\", \"application/json; charset=UTF-8\");\n                httpURLConnection.setDoInput(true);\n                httpURLConnection.setDoOutput(true);\n                httpURLConnection.connect();\n\n                dos = httpURLConnection.getOutputStream();\n                httpURLConnection.getOutputStream();\n                dos.write(jsonData.getBytes());\n\n                ist = httpURLConnection.getInputStream();\n                String line;\n                BufferedReader reader = new BufferedReader(new InputStreamReader(ist));\n                buffer = new StringBuffer();\n\n                while ((line = reader.readLine()) != null) {\n                    buffer.append(line);\n                }\n                return String.valueOf(buffer);\n            } catch (Exception e) {\n                e.printStackTrace();\n            } finally {\n                try {\n                    if (ist != null)\n                        ist.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                try {\n                    if (dos != null)\n                        dos.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (httpURLConnection != null)\n                    httpURLConnection.disconnect();\n                result = String.valueOf(buffer);\n            }\n            return null;\n        }\n\n        @Override\n        protected void onPostExecute(String finalJson) {\n\n            if (finalJson != null) {\n                if (buttonclick == 0) {\n                    super.onPostExecute(String.valueOf(finalJson));\n\n                    try {\n                        JSONObject jsonObject = new JSONObject(finalJson);\n                        //jsonObject.getJSONObject(\"\");\n\n                        new MyRouteShipments(finalJson, String.valueOf(Latitude), String.valueOf(Longitude), getApplicationContext(),\n                                getWindow().getDecorView().getRootView());\n\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                    }\n\n                    adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                    mapListview.setAdapter(adapter);\n\n                    //ValidateDatas();\n                    btnStartTrip.setVisibility(View.GONE);\n                    btnCloseTrip.setVisibility(View.GONE);\n                } else\n                    CrossCheckandUpdateFields(finalJson);\n            } else\n                GlobalVar.GV().ShowSnackbar(getWindow().getDecorView().getRootView(), getString(R.string.wentwrong), GlobalVar.AlertType.Error);\n            if (progressDialog != null)\n                progressDialog.dismiss();\n\n            progressflag = 0;\n            flag_thread = false;\n        }\n    }\n\n    int manualtest = 0;\n\n    private void CrossCheckandUpdateFields(String json) {\n\n        try {\n            JSONArray jsonArray = new JSONArray(json);\n\n            if (manualtest == 2) {\n                for (int i = 0; i < jsonArray.length(); i++) {\n                    JSONObject newdata = jsonArray.getJSONObject(i);\n                    if (i == 10 || i == 0) {\n                        newdata.getString(\"ConsigneeMobile\").replace(newdata.getString(\"ConsigneeMobile\"), \"0593793637\");\n                        newdata.put(\"ConsigneeMobile\", \"0593793637\");\n                        jsonArray.put(i, newdata);\n                    }\n                }\n            }\n            boolean change = false;\n            for (int i = 0; i < jsonArray.length(); i++) {\n                JSONObject newdata = jsonArray.getJSONObject(i);\n                for (int j = 0; j < GlobalVar.GV().myRouteShipmentList.size(); j++) {\n                    if (newdata.getString(\"ItemNo\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ItemNo)) {\n                        if (!newdata.getString(\"ConsigneeName\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneeName)\n                                || !newdata.getString(\"ConsigneeMobile\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneeMobile)\n                                || !newdata.getString(\"BillingType\").equals(GlobalVar.GV().myRouteShipmentList.get(j).BillingType)\n                                || Double.parseDouble(newdata.getString(\"CODAmount\")) != GlobalVar.GV().myRouteShipmentList.get(j).CODAmount\n                                || !newdata.getString(\"ConsigneePhoneNumber\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneePhoneNumber)\n                                || !newdata.getString(\"ConsigneeLatitude\").equals(GlobalVar.GV().myRouteShipmentList.get(j).Latitude)\n                                || !newdata.getString(\"ConsigneeLongitude\").equals(GlobalVar.GV().myRouteShipmentList.get(j).Longitude)) {\n\n                            String header = \"\";\n                            if (!newdata.getString(\"ConsigneeName\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneeName)) {\n                                header = \"Name\";\n                            }\n                            if (!newdata.getString(\"ConsigneeMobile\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneeMobile)) {\n                                if (header.length() > 0)\n                                    header = header + \",\" + \"Mobile\";\n                                else\n                                    header = \"Mobile\";\n\n                            }\n                            if (!newdata.getString(\"BillingType\").equals(GlobalVar.GV().myRouteShipmentList.get(j).BillingType)) {\n                                if (header.length() > 0)\n                                    header = header + \",\" + \"BillingType\";\n                                else\n                                    header = \"BillingType\";\n                            }\n\n                            if (Double.parseDouble(newdata.getString(\"CODAmount\")) != GlobalVar.GV().myRouteShipmentList.get(j).CODAmount) {\n                                if (header.length() > 0)\n                                    header = header + \",\" + \"CODAmount\";\n                                else\n                                    header = \"CODAmount\";\n\n                            }\n\n                            if (!newdata.getString(\"ConsigneePhoneNumber\").equals(GlobalVar.GV().myRouteShipmentList.get(j).ConsigneePhoneNumber)) {\n                                if (header.length() > 0)\n                                    header = header + \",\" + \"Ph No\";\n                                else\n                                    header = \"Ph No\";\n\n                            }\n                            if (!newdata.getString(\"ConsigneeLatitude\").equals(GlobalVar.GV().myRouteShipmentList.get(j).Latitude)) {\n                                if (header.length() > 0)\n                                    header = header + \",\" + \"Location\";\n                                else\n                                    header = \"Location\";\n\n                            }\n                            if (!newdata.getString(\"ConsigneeLongitude\").equals(GlobalVar.GV().myRouteShipmentList.get(j).Longitude)) {\n\n                                if (!header.contains(\"Location\")) {\n                                    header = header + \",\" + \"Location\";\n                                }\n                            }\n\n\n                            MyRouteShipments update = GlobalVar.GV().myRouteShipmentList.get(j);\n\n                            update.ConsigneeName = newdata.getString(\"ConsigneeName\");\n                            update.ConsigneeMobile = newdata.getString(\"ConsigneeMobile\");\n                            update.BillingType = newdata.getString(\"BillingType\");\n                            update.CODAmount = Double.parseDouble(newdata.getString(\"CODAmount\"));\n                            update.ConsigneePhoneNumber = newdata.getString(\"ConsigneePhoneNumber\");\n\n                            update.Latitude = newdata.getString(\"Latitude\");\n                            update.Longitude = newdata.getString(\"Longitude\");\n\n                            if (update.Latitude.length() > 0 && update.Latitude.equals(\"null\") && update.Latitude != null) {\n\n                                Location sp = new Location(\"\");\n                                update.Latitude = \"0\";\n                                update.Longitude = \"0\";\n\n                            }\n\n\n                            GlobalVar.GV().myRouteShipmentList.set(j, update);\n\n\n                            DBConnections dbConnections = new DBConnections(getApplicationContext(), null);\n                            Cursor resultDetail = dbConnections.Fill(\"select * from MyRouteShipments where ItemNo = \" +\n                                    newdata.getString(\"ItemNo\"), getApplicationContext());\n\n                            if (resultDetail.getCount() > 0) {\n                                //resultDetail.moveToLast();\n                                dbConnections.UpdateMyRouteShipmentsWithHeader\n                                        (newdata.getString(\"ItemNo\"), true, header, getApplicationContext(),\n                                                getWindow().getDecorView().getRootView());\n                            }\n\n                            // adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                            // mapListview.setAdapter(adapter);\n\n                            GlobalVar.GV().MakeSound(getApplicationContext(), R.raw.barcodescanned);\n\n//                            Animation animation = AnimationUtils.loadAnimation(getApplicationContext(), android.R.anim.slide_in_left);\n//                            viewToAnimate.startAnimation(animation);\n//                            lastPosition = position;\n\n                        }\n                        change = true;\n                        break;\n                    }\n                }\n            }\n\n            if (change) {\n                ArrayList<MyRouteShipments> temp = new ArrayList<MyRouteShipments>();\n                temp.addAll(GlobalVar.GV().myRouteShipmentList);\n                GlobalVar.GV().myRouteShipmentList.clear();\n                GlobalVar.GV().myRouteShipmentList = new ArrayList<>();\n                GlobalVar.GV().myRouteShipmentList.addAll(temp);\n                temp.clear();\n\n                adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n                mapListview.setAdapter(adapter);\n\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        manualtest++;\n    }\n\n    private void deleteConfirmRoute() {\n        AlertDialog.Builder builder1 = new AlertDialog.Builder(MyRouteActivity.this);\n        builder1.setTitle(\"Info\");\n        builder1.setMessage(\"Do you want to delete all? \");\n        builder1.setCancelable(true);\n\n        builder1.setPositiveButton(\n                \"Yes\",\n                new DialogInterface.OnClickListener() {\n                    public void onClick(DialogInterface dialog, int id) {\n                        GlobalVar.GV().myRouteShipmentList.clear();\n\n                        DBConnections dbConnections = new DBConnections(getApplicationContext(), null);\n                        dbConnections.clearAllCourierDailyRoute(getApplicationContext());\n                        dbConnections.close();\n                        finish();\n                    }\n                });\n\n        builder1.setNegativeButton(\n                \"No\",\n                new DialogInterface.OnClickListener() {\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n\n        AlertDialog alert11 = builder1.create();\n        alert11.show();\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n        if (savedInstanceState != null) {\n            GlobalVar.GV().EmployID = savedInstanceState.getInt(\"EmployID\");\n            GlobalVar.GV().UserID = savedInstanceState.getInt(\"UserID\");\n            GlobalVar.GV().StationID = savedInstanceState.getInt(\"StationID\");\n            GlobalVar.GV().EmployMobileNo = savedInstanceState.getString(\"EmployMobileNo\");\n            GlobalVar.GV().EmployName = savedInstanceState.getString(\"EmployName\");\n            GlobalVar.GV().EmployStation = savedInstanceState.getString(\"EmployStation\");\n            GlobalVar.GV().CourierDailyRouteID = savedInstanceState.getInt(\"CourierDailyRouteID\");\n            GlobalVar.GV().myRouteShipmentList = savedInstanceState.getParcelableArrayList(\"myRouteShipmentList\");\n            Latitude = savedInstanceState.getDouble(\"Latitude\");\n            Longitude = savedInstanceState.getDouble(\"Longitude\");\n            places = (ArrayList<Location>) savedInstanceState.getSerializable(\"places\");\n\n            adapter = new RouteListAdapter(getApplicationContext(), GlobalVar.GV().myRouteShipmentList, \"MyRouteActivity\");\n            mapListview.setAdapter(adapter);\n\n            if (GlobalVar.GV().CourierDailyRouteID == 0) {\n                btnStartTrip.setVisibility(View.VISIBLE);\n                txtStartTrip.setVisibility(View.VISIBLE);\n                btnCloseTrip.setVisibility(View.GONE);\n                txtCloseTrip.setVisibility(View.GONE);\n            } else {\n                btnStartTrip.setVisibility(View.GONE);\n                txtStartTrip.setVisibility(View.GONE);\n                if (GlobalVar.GV().myRouteShipmentList.size() > 0) {\n                    btnCloseTrip.setVisibility(View.GONE);\n                    txtCloseTrip.setVisibility(View.GONE);\n                } else {\n                    btnCloseTrip.setVisibility(View.VISIBLE);\n                    txtCloseTrip.setVisibility(View.VISIBLE);\n                }\n            }\n        }\n    }\n\n\n    @Override\n    public void onSaveInstanceState(Bundle outState) {\n        outState.putInt(\"EmployID\", GlobalVar.GV().EmployID);\n        outState.putInt(\"UserID\", GlobalVar.GV().UserID);\n        outState.putInt(\"StationID\", GlobalVar.GV().StationID);\n        outState.putString(\"EmployMobileNo\", GlobalVar.GV().EmployMobileNo);\n        outState.putString(\"EmployName\", GlobalVar.GV().EmployName);\n        outState.putString(\"EmployStation\", GlobalVar.GV().EmployStation);\n        outState.putInt(\"CourierDailyRouteID\", GlobalVar.GV().CourierDailyRouteID);\n        outState.putParcelableArrayList(\"myRouteShipmentList\", GlobalVar.GV().myRouteShipmentList);\n        outState.putDouble(\"Latitude\", Latitude);\n        outState.putDouble(\"Longitude\", Longitude);\n        outState.putSerializable(\"places\", places);\n        super.onSaveInstanceState(outState);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/naqelexpress/naqelpointer/Activity/MyRoute/MyRouteActivity.java	(revision 5a83e701d9e1902cae2ab75bf4046c0d36bba35e)
+++ app/src/main/java/com/naqelexpress/naqelpointer/Activity/MyRoute/MyRouteActivity.java	(revision )
@@ -501,7 +501,7 @@
                     CrossCheckandUpdateFields(finalJson);
             } else
                 GlobalVar.GV().ShowSnackbar(getWindow().getDecorView().getRootView(), getString(R.string.wentwrong), GlobalVar.AlertType.Error);
-            if (progressDialog != null)
+            if (progressDialog != null && progressDialog.isShowing())
                 progressDialog.dismiss();
 
             progressflag = 0;
